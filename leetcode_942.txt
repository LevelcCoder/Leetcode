//88.53%
class Solution {
public:
    vector<int> diStringMatch(string s) {
        vector<int> ans;
        int low = 0;
        int high = s.size();
        for(int i=0;i<s.size();i++){
            if(s[i]=='I'){
                ans.push_back(low);
                low++;
            }
            else{
                ans.push_back(high);
                high--;
            }
        }
        ans.push_back(low);
        return ans;
    }
};
//官方题解，贪心算法
class Solution {
public:
    vector<int> diStringMatch(string s) {
        int n = s.length(), lo = 0, hi = n;
        vector<int> perm(n + 1);
        for (int i = 0; i < n; ++i) {
            perm[i] = s[i] == 'I' ? lo++ : hi--;
        }
        perm[n] = lo; // 最后剩下一个数，此时 lo == hi
        return perm;
    }
};

