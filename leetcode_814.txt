//后序遍历
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* pruneTree(TreeNode* root) {
        if(root==NULL) return root;
        
        if(root->left!=NULL&&root->left->left==NULL&&root->left->right==NULL){
            if(root->left->val==0) root->left = NULL;
        }
        if(root->right!=NULL&&root->right->left==NULL&&root->right->right==NULL){
            if(root->right->val==0) root->right = NULL;
        }
       
        root->left = pruneTree(root->left);
        root->right = pruneTree(root->right);
        if(root->left==NULL&&root->right==NULL){
            if(root->val==0) root = NULL;
            
        }
        return root;
    }
};
//官方题解
class Solution {
public:
    TreeNode* pruneTree(TreeNode* root) {
        if (!root) {
            return nullptr;
        }
        root->left = pruneTree(root->left);
        root->right = pruneTree(root->right);
        if (!root->left && !root->right && !root->val) {
            return nullptr;
        }
        return root;
    }   
};

