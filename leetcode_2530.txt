//60%，主要是判决各种情况
class Solution {
public:
    bool oneEditAway(string first, string second) {
        int cnt = 0;
        int len1 = first.size();
        int len2 = second.size();
        if(len1==1&&len2==1) return true;
        if(abs(len1-len2)>=2) return false;
        if(len1==len2){
            for(int i=0;i<len1;i++){
                if(first[i]!=second[i]) cnt++;
            }
            if(cnt>1) return false;
            else return true;
        }
        if(len1>len2){
            int i=0;
            int j=0;
            while(i<len1&&j<len2){
                if(first[i]==second[j]){
                    i++;
                    j++;
                }
                if(first[i]!=second[j]){
                    i++;
                }
            }
            if(i==len1&&j==len2) return true;
            if(len2==0) return true;
            else return false;
        }
        else{
            int i=0;
            int j=0;
            while(i<len1&&j<len2){
                if(first[i]==second[j]){
                    i++;
                    j++;
                }
                if(first[i]!=second[j]){
                    j++;
                }
            }
            if(i==len1&&j==len2) return true;
            if(len1==0) return true;
            else return false;
        }
    }
};
//一个双指针的思路，思路是如果只有一次编辑，first和second的前缀和后缀应该是相同的，三种情况都是满足这个规律的 100%
class Solution {
public:
    bool oneEditAway(string first, string second) {
        int p1 = 0;
        int q1 = first.size() - 1;
        int p2 = 0;
        int q2 = second.size() - 1;
        while (p1 <= q1 && p2 <= q2) {
            if (first[p1] == second[p1]) {
                ++p1;
                ++p2;
                continue;
            }
            if (first[q1] == second[q2]) {
                --q1;
                --q2;
            } else {
                break;
            }
        }
        return q1 - p1 + q2 - p2 <= 0 && abs(p1 - p2) <= 1 && abs(q1 - q2) <= 1;
    }
};