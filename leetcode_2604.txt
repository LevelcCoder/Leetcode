//拓扑排序的应用，只能有一种排序时队列每次的大小只能为1
class Solution {
public:
    bool sequenceReconstruction(vector<int>& nums, vector<vector<int>>& sequences) {
        int n = nums.size();
        vector<unordered_set<int> > numseq(n+1);
        vector<int> indegree(n+1,0);
        for(int i=0;i<sequences.size();i++){
            
            for(int j=0;j<sequences[i].size()-1;j++){
                int num = sequences[i][j];
                numseq[num].insert(sequences[i][j+1]);
            }
        }
        queue<int> nodes;
        for(int i=1;i<=n;i++){
            for(auto it = numseq[i].begin();it!=numseq[i].end();it++){
                indegree[*it]++;
            }
        }
        for(int i=1;i<=n;i++){
            if(indegree[i]==0) nodes.push(i); 
        }
        int cnt = 0;//
        while(!nodes.empty()){
            if(nodes.size()>1) return false;
            int sn = nodes.front();
            if(sn!=nums[cnt]) return false;
            else cnt++;
            nodes.pop();
            for(auto it = numseq[sn].begin();it!=numseq[sn].end();it++){
                indegree[*it]--;
                if(indegree[*it]==0) nodes.push(*it);
            }
        }
        return true;
    }
};