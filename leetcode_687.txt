二叉树里的最长路径
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int single_dfs(TreeNode* root){
        if(root==NULL) return 0;
        int left_h = 0;
        int right_h = 0;
        left_h = single_dfs(root->left);
        right_h = single_dfs(root->right);
        if(root->left!=NULL&&root->left->val==root->val){
            
            left_h++;
            ans = max(ans,left_h);
        }
        else left_h = 0;
        if(root->right!=NULL&&root->right->val==root->val){
            
            right_h++;
            ans = max(ans,right_h);
        }
        else right_h = 0;

        if(root->right!=NULL&&root->right->val==root->val&&root->left!=NULL&&root->left->val==root->val){
            
            ans = max(ans,left_h+right_h);
        }
        return max(left_h,right_h);
    }
    int longestUnivaluePath(TreeNode* root) {
        if(root==NULL) return 0;
        if(root->left==NULL&&root->right==NULL) return 0;
        single_dfs(root);
        return ans;
    }
};