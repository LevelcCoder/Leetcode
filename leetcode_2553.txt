//滑动窗口不是很熟练捏
class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int i = 0;
        int j = 0;
        int n = nums.size();
        int mul = nums[i];
        int ans = 0;
        while(j<n){
            if(i<=j){
                if(mul<k){
                    
                    ans += (j-i+1);
                    if(j<n-1)
                    mul *= nums[++j];
                    else j++;
                }
                else{
                    mul /= nums[i++];
                }
            }
            else j++;
        }
        return ans;
    }
};

//官方题解
class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int n = nums.size(), ret = 0;
        int prod = 1, i = 0;
        for (int j = 0; j < n; j++) {
            prod *= nums[j];
            while (i <= j && prod >= k) {
                prod /= nums[i];
                i++;
            }
            ret += j - i + 1;
        }
        return ret;
    }
};

